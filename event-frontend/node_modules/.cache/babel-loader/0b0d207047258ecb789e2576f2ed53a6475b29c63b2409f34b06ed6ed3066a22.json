{"ast":null,"code":"const API_BASE_URL = 'http://localhost:5000/api';\nexport const EventService = {\n  async fetchEventDetails(eventId) {\n    const response = await fetch(`${API_BASE_URL}/events/${eventId}`);\n    if (!response.ok) {\n      const errorData = await response.json();\n      throw new Error(errorData.message || 'Failed to fetch event details');\n    }\n    return response.json();\n  },\n  async registerForEvent(eventId) {\n    const token = localStorage.getItem('authToken');\n    if (!token) throw new Error('Please log in to register for the event.');\n    const response = await fetch(`${API_BASE_URL}/events/${eventId}/register`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`\n      }\n    });\n    if (!response.ok) {\n      const errorData = await response.json();\n      throw new Error(errorData.message || 'Failed to register for event');\n    }\n    return response.json();\n  }\n};","map":{"version":3,"names":["API_BASE_URL","EventService","fetchEventDetails","eventId","response","fetch","ok","errorData","json","Error","message","registerForEvent","token","localStorage","getItem","method","headers","Authorization"],"sources":["D:/Work/event-frontend/src/services/EventService.js"],"sourcesContent":["const API_BASE_URL = 'http://localhost:5000/api';\r\n\r\nexport const EventService = {\r\n    async fetchEventDetails(eventId) {\r\n        const response = await fetch(`${API_BASE_URL}/events/${eventId}`);\r\n        if (!response.ok) {\r\n            const errorData = await response.json();\r\n            throw new Error(errorData.message || 'Failed to fetch event details');\r\n        }\r\n        return response.json();\r\n    },\r\n\r\n    async registerForEvent(eventId) {\r\n        const token = localStorage.getItem('authToken');\r\n        if (!token) throw new Error('Please log in to register for the event.');\r\n\r\n        const response = await fetch(`${API_BASE_URL}/events/${eventId}/register`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${token}`,\r\n            },\r\n        });\r\n\r\n        if (!response.ok) {\r\n            const errorData = await response.json();\r\n            throw new Error(errorData.message || 'Failed to register for event');\r\n        }\r\n        return response.json();\r\n    }\r\n};\r\n"],"mappings":"AAAA,MAAMA,YAAY,GAAG,2BAA2B;AAEhD,OAAO,MAAMC,YAAY,GAAG;EACxB,MAAMC,iBAAiBA,CAACC,OAAO,EAAE;IAC7B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGL,YAAY,WAAWG,OAAO,EAAE,CAAC;IACjE,IAAI,CAACC,QAAQ,CAACE,EAAE,EAAE;MACd,MAAMC,SAAS,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;MACvC,MAAM,IAAIC,KAAK,CAACF,SAAS,CAACG,OAAO,IAAI,+BAA+B,CAAC;IACzE;IACA,OAAON,QAAQ,CAACI,IAAI,CAAC,CAAC;EAC1B,CAAC;EAED,MAAMG,gBAAgBA,CAACR,OAAO,EAAE;IAC5B,MAAMS,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;IAC/C,IAAI,CAACF,KAAK,EAAE,MAAM,IAAIH,KAAK,CAAC,0CAA0C,CAAC;IAEvE,MAAML,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGL,YAAY,WAAWG,OAAO,WAAW,EAAE;MACvEY,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE,kBAAkB;QAClCC,aAAa,EAAE,UAAUL,KAAK;MAClC;IACJ,CAAC,CAAC;IAEF,IAAI,CAACR,QAAQ,CAACE,EAAE,EAAE;MACd,MAAMC,SAAS,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;MACvC,MAAM,IAAIC,KAAK,CAACF,SAAS,CAACG,OAAO,IAAI,8BAA8B,CAAC;IACxE;IACA,OAAON,QAAQ,CAACI,IAAI,CAAC,CAAC;EAC1B;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import _objectSpread from\"D:/Work/event-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState}from'react';import{useNavigate}from'react-router-dom';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const RegisterPage=()=>{const navigate=useNavigate();const[formData,setFormData]=useState({firstName:'',lastName:'',email:'',password:'',confirmPassword:''});const[errors,setErrors]=useState({});const[serverError,setServerError]=useState('');// ��� ����������� ������ �� �������\nconst handleChange=e=>{const{name,value}=e.target;setFormData(_objectSpread(_objectSpread({},formData),{},{[name]:value}));};const validateForm=()=>{const newErrors={};if(!formData.firstName.trim())newErrors.firstName='Name is required';if(!formData.lastName.trim())newErrors.lastName='Surname is required';if(!formData.email.trim()||!/\\S+@\\S+\\.\\S+/.test(formData.email))newErrors.email='Enter a valid email';if(!formData.password.trim()||formData.password.length<6)newErrors.password='Password must be at least 6 characters';if(formData.password!==formData.confirmPassword)newErrors.confirmPassword='Passwords do not match';return newErrors;};const handleSubmit=async e=>{e.preventDefault();const validationErrors=validateForm();if(Object.keys(validationErrors).length>0){setErrors(validationErrors);return;}try{const response=await fetch('http://localhost:5000/api/register',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({firstName:formData.firstName,lastName:formData.lastName,email:formData.email,password:formData.password})});const data=await response.json();if(!response.ok){// ��������� ������ � �������\nsetServerError(data.message||'Server error. Please try again later.');return;}console.log('Registration successful:',data);// ������� �� �������� EventPage ����� �������� �����������\nnavigate('/event');}catch(error){console.error('Error during registration:',error);setServerError('Server error. Please try again later.');}};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Registration\"}),serverError&&/*#__PURE__*/_jsx(\"p\",{style:{color:'red'},children:serverError}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{children:\"Name:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"firstName\",value:formData.firstName,onChange:handleChange}),errors.firstName&&/*#__PURE__*/_jsx(\"span\",{children:errors.firstName})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{children:\"Surname:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"lastName\",value:formData.lastName,onChange:handleChange}),errors.lastName&&/*#__PURE__*/_jsx(\"span\",{children:errors.lastName})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{children:\"Email:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",name:\"email\",value:formData.email,onChange:handleChange}),errors.email&&/*#__PURE__*/_jsx(\"span\",{children:errors.email})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{children:\"Password:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",name:\"password\",value:formData.password,onChange:handleChange}),errors.password&&/*#__PURE__*/_jsx(\"span\",{children:errors.password})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{children:\"Confirm password:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",name:\"confirmPassword\",value:formData.confirmPassword,onChange:handleChange}),errors.confirmPassword&&/*#__PURE__*/_jsx(\"span\",{children:errors.confirmPassword})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Register\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:()=>navigate('/'),children:\"Back\"})]})]});};export default RegisterPage;","map":{"version":3,"names":["React","useState","useNavigate","jsx","_jsx","jsxs","_jsxs","RegisterPage","navigate","formData","setFormData","firstName","lastName","email","password","confirmPassword","errors","setErrors","serverError","setServerError","handleChange","e","name","value","target","_objectSpread","validateForm","newErrors","trim","test","length","handleSubmit","preventDefault","validationErrors","Object","keys","response","fetch","method","headers","body","JSON","stringify","data","json","ok","message","console","log","error","children","style","color","onSubmit","type","onChange","onClick"],"sources":["D:/Work/event-frontend/src/pages/RegisterPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst RegisterPage = () => {\r\n    const navigate = useNavigate();\r\n    const [formData, setFormData] = useState({\r\n        firstName: '',\r\n        lastName: '',\r\n        email: '',\r\n        password: '',\r\n        confirmPassword: '',\r\n    });\r\n\r\n    const [errors, setErrors] = useState({});\r\n    const [serverError, setServerError] = useState(''); // ��� ����������� ������ �� �������\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setFormData({ ...formData, [name]: value });\r\n    };\r\n\r\n    const validateForm = () => {\r\n        const newErrors = {};\r\n        if (!formData.firstName.trim()) newErrors.firstName = 'Name is required';\r\n        if (!formData.lastName.trim()) newErrors.lastName = 'Surname is required';\r\n        if (!formData.email.trim() || !/\\S+@\\S+\\.\\S+/.test(formData.email))\r\n            newErrors.email = 'Enter a valid email';\r\n        if (!formData.password.trim() || formData.password.length < 6)\r\n            newErrors.password = 'Password must be at least 6 characters';\r\n        if (formData.password !== formData.confirmPassword)\r\n            newErrors.confirmPassword = 'Passwords do not match';\r\n        return newErrors;\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const validationErrors = validateForm();\r\n        if (Object.keys(validationErrors).length > 0) {\r\n            setErrors(validationErrors);\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const response = await fetch('http://localhost:5000/api/register', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    firstName: formData.firstName,\r\n                    lastName: formData.lastName,\r\n                    email: formData.email,\r\n                    password: formData.password,\r\n                }),\r\n            });\r\n\r\n            const data = await response.json();\r\n\r\n            if (!response.ok) {\r\n                // ��������� ������ � �������\r\n                setServerError(data.message || 'Server error. Please try again later.');\r\n                return;\r\n            }\r\n\r\n            console.log('Registration successful:', data);\r\n\r\n            // ������� �� �������� EventPage ����� �������� �����������\r\n            navigate('/event');\r\n        } catch (error) {\r\n            console.error('Error during registration:', error);\r\n            setServerError('Server error. Please try again later.');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>Registration</h1>\r\n            {serverError && <p style={{ color: 'red' }}>{serverError}</p>}\r\n            <form onSubmit={handleSubmit}>\r\n                <div>\r\n                    <label>Name:</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"firstName\"\r\n                        value={formData.firstName}\r\n                        onChange={handleChange}\r\n                    />\r\n                    {errors.firstName && <span>{errors.firstName}</span>}\r\n                </div>\r\n                <div>\r\n                    <label>Surname:</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"lastName\"\r\n                        value={formData.lastName}\r\n                        onChange={handleChange}\r\n                    />\r\n                    {errors.lastName && <span>{errors.lastName}</span>}\r\n                </div>\r\n                <div>\r\n                    <label>Email:</label>\r\n                    <input\r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        value={formData.email}\r\n                        onChange={handleChange}\r\n                    />\r\n                    {errors.email && <span>{errors.email}</span>}\r\n                </div>\r\n                <div>\r\n                    <label>Password:</label>\r\n                    <input\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        value={formData.password}\r\n                        onChange={handleChange}\r\n                    />\r\n                    {errors.password && <span>{errors.password}</span>}\r\n                </div>\r\n                <div>\r\n                    <label>Confirm password:</label>\r\n                    <input\r\n                        type=\"password\"\r\n                        name=\"confirmPassword\"\r\n                        value={formData.confirmPassword}\r\n                        onChange={handleChange}\r\n                    />\r\n                    {errors.confirmPassword && <span>{errors.confirmPassword}</span>}\r\n                </div>\r\n                <button type=\"submit\">Register</button>\r\n                <button type=\"button\" onClick={() => navigate('/')}>\r\n                    Back\r\n                </button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RegisterPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
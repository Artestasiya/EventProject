{"ast":null,"code":"var _jsxFileName = \"D:\\\\Work\\\\event-frontend\\\\src\\\\pages\\\\EventsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport './EventDetailPage.css';\nimport backgroundImage from '../images/background.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EventDetailPage = () => {\n  _s();\n  const {\n    eventId\n  } = useParams();\n  const [event, setEvent] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [serverError, setServerError] = useState('');\n  const [userId, setUserId] = useState(1); // Убедитесь, что пользователь авторизован и есть id пользователя\n\n  useEffect(() => {\n    const fetchEvent = async () => {\n      try {\n        const response = await fetch(`http://localhost:5000/api/events/${eventId}`);\n        const data = await response.json();\n        if (response.ok) {\n          setEvent(data);\n        } else {\n          setServerError(data.message || 'Error fetching event details');\n        }\n      } catch (error) {\n        console.error('Error fetching event:', error);\n        setServerError('Server error. Please try again later.');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchEvent();\n  }, [eventId]);\n  const handleRegisterClick = async () => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/events/${eventId}/register`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          userId\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        alert(data.message);\n      } else {\n        alert(data.message || 'Registration failed');\n      }\n    } catch (error) {\n      console.error('Error registering for event:', error);\n      alert('Server error during registration');\n    }\n  };\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading event details...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"event-detail-container\",\n    children: [serverError && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: serverError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 29\n    }, this), event ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"event-detail\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: event.image,\n        alt: event.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"event-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: event.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: event.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Date: \", new Date(event.date).toLocaleDateString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Place: \", event.place_name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Category: \", event.category_name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Participants:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: event.participants && event.participants.length > 0 ? event.participants.map((participant, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [participant.name, \" \", participant.surname, \" (\", participant.email, \")\"]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 37\n          }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No participants yet.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleRegisterClick,\n          children: \"Register for Event\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Event not found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n};\n_s(EventDetailPage, \"18eCUq076/ukZqQCcd11cFi8TSc=\", false, function () {\n  return [useParams];\n});\n_c = EventDetailPage;\nexport default EventDetailPage;\nvar _c;\n$RefreshReg$(_c, \"EventDetailPage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","backgroundImage","jsxDEV","_jsxDEV","EventDetailPage","_s","eventId","event","setEvent","isLoading","setIsLoading","serverError","setServerError","userId","setUserId","fetchEvent","response","fetch","data","json","ok","message","error","console","handleRegisterClick","method","headers","body","JSON","stringify","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","className","src","image","alt","name","description","Date","date","toLocaleDateString","place_name","category_name","participants","length","map","participant","index","surname","email","onClick","_c","$RefreshReg$"],"sources":["D:/Work/event-frontend/src/pages/EventsPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport './EventDetailPage.css';\r\nimport backgroundImage from '../images/background.jpg';\r\n\r\nconst EventDetailPage = () => {\r\n    const { eventId } = useParams();\r\n    const [event, setEvent] = useState(null);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [serverError, setServerError] = useState('');\r\n    const [userId, setUserId] = useState(1); // Убедитесь, что пользователь авторизован и есть id пользователя\r\n\r\n    useEffect(() => {\r\n        const fetchEvent = async () => {\r\n            try {\r\n                const response = await fetch(`http://localhost:5000/api/events/${eventId}`);\r\n                const data = await response.json();\r\n                if (response.ok) {\r\n                    setEvent(data);\r\n                } else {\r\n                    setServerError(data.message || 'Error fetching event details');\r\n                }\r\n            } catch (error) {\r\n                console.error('Error fetching event:', error);\r\n                setServerError('Server error. Please try again later.');\r\n            } finally {\r\n                setIsLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchEvent();\r\n    }, [eventId]);\r\n\r\n    const handleRegisterClick = async () => {\r\n        try {\r\n            const response = await fetch(`http://localhost:5000/api/events/${eventId}/register`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({ userId }),\r\n            });\r\n\r\n            const data = await response.json();\r\n            if (response.ok) {\r\n                alert(data.message);\r\n            } else {\r\n                alert(data.message || 'Registration failed');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error registering for event:', error);\r\n            alert('Server error during registration');\r\n        }\r\n    };\r\n\r\n    if (isLoading) {\r\n        return <p>Loading event details...</p>;\r\n    }\r\n\r\n    return (\r\n        <div className=\"event-detail-container\">\r\n            {serverError && <p className=\"error\">{serverError}</p>}\r\n\r\n            {event ? (\r\n                <div className=\"event-detail\">\r\n                    <img src={event.image} alt={event.name} />\r\n                    <div className=\"event-info\">\r\n                        <h1>{event.name}</h1>\r\n                        <p>{event.description}</p>\r\n                        <p>Date: {new Date(event.date).toLocaleDateString()}</p>\r\n                        <p>Place: {event.place_name}</p>\r\n                        <p>Category: {event.category_name}</p>\r\n\r\n                        <h3>Participants:</h3>\r\n                        <ul>\r\n                            {event.participants && event.participants.length > 0 ? (\r\n                                event.participants.map((participant, index) => (\r\n                                    <li key={index}>\r\n                                        {participant.name} {participant.surname} ({participant.email})\r\n                                    </li>\r\n                                ))\r\n                            ) : (\r\n                                <p>No participants yet.</p>\r\n                            )}\r\n                        </ul>\r\n\r\n                        <button onClick={handleRegisterClick}>Register for Event</button>\r\n                    </div>\r\n                </div>\r\n            ) : (\r\n                <p>Event not found</p>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EventDetailPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
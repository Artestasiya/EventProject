{"ast":null,"code":"var _jsxFileName = \"D:\\\\Work\\\\event-frontend\\\\src\\\\pages\\\\EventDetailPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport './EventDetailPage.css';\nimport backgroundImage from '../images/background.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EventDetailPage = () => {\n  _s();\n  const {\n    eventId\n  } = useParams();\n  const [event, setEvent] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [serverError, setServerError] = useState('');\n  const [userId, setUserId] = useState(1); // ��������������, ��� id ������������ ������ ���� ������� �� ��������� ��� ����� �����������\n\n  useEffect(() => {\n    const fetchEvent = async () => {\n      try {\n        const response = await fetch(`http://localhost:5000/api/events/${eventId}`);\n        const data = await response.json();\n        if (response.ok) {\n          setEvent(data);\n        } else {\n          setServerError(data.message || 'Error fetching event details');\n        }\n      } catch (error) {\n        console.error('Error fetching event:', error);\n        setServerError('Server error. Please try again later.');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchEvent();\n  }, [eventId]);\n  const handleRegisterClick = async () => {\n    if (!userId) {\n      alert('Please log in first!');\n      return;\n    }\n    try {\n      const response = await fetch(`http://localhost:5000/api/events/${eventId}/register`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          userId\n        }) // �������� userId � �������\n      });\n      const data = await response.json();\n      if (response.ok) {\n        alert(data.message);\n        // �����������: �������� ������ � ������� ����� �������� �����������\n        setEvent(prevEvent => ({\n          ...prevEvent,\n          participants: [...(prevEvent.participants || []), {\n            id: userId,\n            name: 'Your Name'\n          }]\n        }));\n      } else {\n        alert(data.message || 'Registration failed');\n      }\n    } catch (error) {\n      console.error('Error registering for event:', error);\n      alert('Server error during registration');\n    }\n  };\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading event details...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"background\",\n    style: {\n      backgroundImage: `url(${backgroundImage})`\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"event-detail-container\",\n      children: [serverError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: serverError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 44\n      }, this), event ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"event-detail\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"back-button\",\n          onClick: () => window.history.back(),\n          children: \"Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: event.image,\n          alt: event.name,\n          className: \"event-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"event-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: event.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: event.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Date: \", new Date(event.date).toLocaleDateString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Place: \", event.place_name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Category: \", event.category_name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Participants:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: event.participants && event.participants.length > 0 ? event.participants.map((participant, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [participant.name, \" \", participant.surname, \")\"]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 41\n            }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"No participants yet.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleRegisterClick,\n            children: \"Register for Event\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Event not found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n};\n_s(EventDetailPage, \"18eCUq076/ukZqQCcd11cFi8TSc=\", false, function () {\n  return [useParams];\n});\n_c = EventDetailPage;\nexport default EventDetailPage;\nvar _c;\n$RefreshReg$(_c, \"EventDetailPage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","backgroundImage","jsxDEV","_jsxDEV","EventDetailPage","_s","eventId","event","setEvent","isLoading","setIsLoading","serverError","setServerError","userId","setUserId","fetchEvent","response","fetch","data","json","ok","message","error","console","handleRegisterClick","alert","method","headers","body","JSON","stringify","prevEvent","participants","id","name","children","fileName","_jsxFileName","lineNumber","columnNumber","className","style","onClick","window","history","back","src","image","alt","description","Date","date","toLocaleDateString","place_name","category_name","length","map","participant","index","surname","_c","$RefreshReg$"],"sources":["D:/Work/event-frontend/src/pages/EventDetailPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport './EventDetailPage.css';\r\nimport backgroundImage from '../images/background.jpg';\r\n\r\nconst EventDetailPage = () => {\r\n    const { eventId } = useParams();\r\n    const [event, setEvent] = useState(null);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [serverError, setServerError] = useState('');\r\n    const [userId, setUserId] = useState(1); // ��������������, ��� id ������������ ������ ���� ������� �� ��������� ��� ����� �����������\r\n\r\n    useEffect(() => {\r\n        const fetchEvent = async () => {\r\n            try {\r\n                const response = await fetch(`http://localhost:5000/api/events/${eventId}`);\r\n                const data = await response.json();\r\n                if (response.ok) {\r\n                    setEvent(data);\r\n                } else {\r\n                    setServerError(data.message || 'Error fetching event details');\r\n                }\r\n            } catch (error) {\r\n                console.error('Error fetching event:', error);\r\n                setServerError('Server error. Please try again later.');\r\n            } finally {\r\n                setIsLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchEvent();\r\n    }, [eventId]);\r\n\r\n    const handleRegisterClick = async () => {\r\n        if (!userId) {\r\n            alert('Please log in first!');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const response = await fetch(`http://localhost:5000/api/events/${eventId}/register`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({ userId }), // �������� userId � �������\r\n            });\r\n\r\n            const data = await response.json();\r\n            if (response.ok) {\r\n                alert(data.message);\r\n                // �����������: �������� ������ � ������� ����� �������� �����������\r\n                setEvent((prevEvent) => ({\r\n                    ...prevEvent,\r\n                    participants: [...(prevEvent.participants || []), { id: userId, name: 'Your Name' }],\r\n                }));\r\n            } else {\r\n                alert(data.message || 'Registration failed');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error registering for event:', error);\r\n            alert('Server error during registration');\r\n        }\r\n    };\r\n\r\n\r\n    if (isLoading) {\r\n        return <p>Loading event details...</p>;\r\n    }\r\n\r\n    return (\r\n        <div className=\"background\" style={{ backgroundImage: `url(${backgroundImage})` }}>\r\n        <div className=\"event-detail-container\">\r\n                           {serverError && <p className=\"error\">{serverError}</p>}\r\n\r\n                {event ? (\r\n                    <div className=\"event-detail\">\r\n                        <button className=\"back-button\" onClick={() => window.history.back()}>Back</button>\r\n\r\n                        <img src={event.image} alt={event.name} className=\"event-image\" />\r\n                        <div className=\"event-info\">\r\n                            <h1>{event.name}</h1>\r\n                            <p>{event.description}</p>\r\n                            <p>Date: {new Date(event.date).toLocaleDateString()}</p>\r\n                            <p>Place: {event.place_name}</p>\r\n                            <p>Category: {event.category_name}</p>\r\n\r\n                            <h3>Participants:</h3>\r\n                            <ul>\r\n                                {event.participants && event.participants.length > 0 ? (\r\n                                    event.participants.map((participant, index) => (\r\n                                        <li key={index}>\r\n                                            {participant.name} {participant.surname})\r\n                                        </li>\r\n                                    ))\r\n                                ) : (\r\n                                    <p>No participants yet.</p>\r\n                                )}\r\n                            </ul>\r\n\r\n                            <button onClick={handleRegisterClick}>Register for Event</button>\r\n                        </div>\r\n                    </div>\r\n                ) : (\r\n                    <p>Event not found</p>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EventDetailPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
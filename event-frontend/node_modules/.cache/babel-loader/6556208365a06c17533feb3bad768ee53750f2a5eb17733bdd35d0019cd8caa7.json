{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useNavigate}from'react-router-dom';import'./EventsPage.css';import backgroundImage from'../images/background.jpg';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const EventsPage=()=>{const navigate=useNavigate();const[eventData,setEventData]=useState([]);const[isLoading,setIsLoading]=useState(true);const[serverError,setServerError]=useState('');useEffect(()=>{const fetchEvents=async()=>{try{const response=await fetch('http://localhost:5000/api/events');const data=await response.json();if(response.ok){setEventData(data);}else{setServerError(data.message||'Error fetching events');}}catch(error){console.error('Error fetching events:',error);setServerError('Server error. Please try again later.');}finally{setIsLoading(false);}};fetchEvents();},[]);// Обработчик клика на карточку события\nconst handleEventClick=eventId=>{navigate(\"/event/\".concat(eventId));};return/*#__PURE__*/_jsx(\"div\",{className:\"background\",style:{backgroundImage:\"url(\".concat(backgroundImage,\")\")},children:/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"top-bar\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Search...\",className:\"search-bar\"}),/*#__PURE__*/_jsx(\"button\",{className:\"user-icon\",onClick:()=>navigate('/profile'),children:\"\\uD83D\\uDC64\"})]}),serverError&&/*#__PURE__*/_jsx(\"p\",{className:\"error\",children:serverError}),/*#__PURE__*/_jsx(\"div\",{className:\"event-cards\",children:isLoading?/*#__PURE__*/_jsx(\"p\",{children:\"Loading events...\"}):eventData.length>0?eventData.map(event=>/*#__PURE__*/_jsxs(\"div\",{className:\"card\",onClick:()=>handleEventClick(event.id_event),children:[/*#__PURE__*/_jsx(\"img\",{src:event.image,alt:event.name}),/*#__PURE__*/_jsxs(\"div\",{className:\"card-info\",children:[/*#__PURE__*/_jsx(\"h3\",{children:event.name}),/*#__PURE__*/_jsx(\"p\",{children:event.description})]})]},event.id_event)):/*#__PURE__*/_jsx(\"p\",{children:\"There are no events now\"})})]})});};export default EventsPage;","map":{"version":3,"names":["React","useState","useEffect","useNavigate","backgroundImage","jsx","_jsx","jsxs","_jsxs","EventsPage","navigate","eventData","setEventData","isLoading","setIsLoading","serverError","setServerError","fetchEvents","response","fetch","data","json","ok","message","error","console","handleEventClick","eventId","concat","className","style","children","type","placeholder","onClick","length","map","event","id_event","src","image","alt","name","description"],"sources":["D:/Work/event-frontend/src/pages/EventsPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './EventsPage.css';\r\nimport backgroundImage from '../images/background.jpg';\r\n\r\nconst EventsPage = () => {\r\n    const navigate = useNavigate();\r\n    const [eventData, setEventData] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [serverError, setServerError] = useState('');\r\n\r\n    useEffect(() => {\r\n        const fetchEvents = async () => {\r\n            try {\r\n                const response = await fetch('http://localhost:5000/api/events');\r\n                const data = await response.json();\r\n                if (response.ok) {\r\n                    setEventData(data);\r\n                } else {\r\n                    setServerError(data.message || 'Error fetching events');\r\n                }\r\n            } catch (error) {\r\n                console.error('Error fetching events:', error);\r\n                setServerError('Server error. Please try again later.');\r\n            } finally {\r\n                setIsLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchEvents();\r\n    }, []);\r\n\r\n    // Обработчик клика на карточку события\r\n    const handleEventClick = (eventId) => {\r\n        navigate(`/event/${eventId}`);\r\n    };\r\n\r\n    return (\r\n        <div className=\"background\" style={{ backgroundImage: `url(${backgroundImage})` }}>\r\n            <div className=\"container\">\r\n                <div className=\"top-bar\">\r\n                    <input type=\"text\" placeholder=\"Search...\" className=\"search-bar\" />\r\n                    <button className=\"user-icon\" onClick={() => navigate('/profile')}>\r\n                        👤\r\n                    </button>\r\n                </div>\r\n\r\n                {serverError && <p className=\"error\">{serverError}</p>}\r\n\r\n                <div className=\"event-cards\">\r\n                    {isLoading ? (\r\n                        <p>Loading events...</p>\r\n                    ) : eventData.length > 0 ? (\r\n                        eventData.map((event) => (\r\n                            <div\r\n                                className=\"card\"\r\n                                key={event.id_event}\r\n                                onClick={() => handleEventClick(event.id_event)}\r\n                            >\r\n                                <img src={event.image} alt={event.name} />\r\n                                <div className=\"card-info\">\r\n                                    <h3>{event.name}</h3>\r\n                                    <p>{event.description}</p>\r\n                                </div>\r\n                            </div>\r\n                        ))\r\n                    ) : (\r\n                        <p>There are no events now</p>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EventsPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\Work\\\\event-frontend\\\\src\\\\pages\\\\EventsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport backgroundImage from '../images/background.jpg';\nimport '../styles/LoginPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginPage = () => {\n  _s();\n  const navigate = useNavigate();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const handleLogin = async () => {\n    if (email && password) {\n      setLoading(true);\n      try {\n        const response = await fetch('http://localhost:5000/api/login', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            email,\n            password\n          })\n        });\n        if (!response.ok) {\n          const errorData = await response.json();\n          setError(errorData.message || 'Invalid login or password');\n          return;\n        }\n        const data = await response.json();\n        if (data.token) {\n          // Сохраняем токен и email в localStorage для дальнейшего использования\n          localStorage.setItem('authToken', data.token);\n          localStorage.setItem('email', email);\n        }\n\n        // Логика перенаправления в зависимости от роли\n        if (data.role === false) {\n          // Обычный пользователь\n          navigate('/event');\n        } else if (data.role === true) {\n          // Администратор\n          navigate('/admin');\n        } else {\n          setError('Role not defined');\n        }\n      } catch (err) {\n        setError('Server error. Please try again later.');\n      } finally {\n        setLoading(false);\n      }\n    } else {\n      setError('Please fill in all fields');\n    }\n  };\n  const handleRegister = () => {\n    navigate('/register');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    style: {\n      backgroundImage: `url(${backgroundImage})`\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          placeholder: \"Enter your email\",\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          placeholder: \"Enter your password\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"login-btn\",\n        onClick: handleLogin,\n        disabled: loading,\n        children: loading ? 'Logging in...' : 'Login'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"register-link\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Don't have an account?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#\",\n          onClick: handleRegister,\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n};\n_s(LoginPage, \"np2X3bNU4AKT/c/hhL1fjPQsyMo=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","useNavigate","backgroundImage","jsxDEV","_jsxDEV","LoginPage","_s","navigate","email","setEmail","password","setPassword","error","setError","loading","setLoading","handleLogin","response","fetch","method","headers","body","JSON","stringify","ok","errorData","json","message","data","token","localStorage","setItem","role","err","handleRegister","className","style","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","placeholder","value","onChange","e","target","onClick","disabled","href","_c","$RefreshReg$"],"sources":["D:/Work/event-frontend/src/pages/EventsPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport backgroundImage from '../images/background.jpg';\r\nimport '../styles/LoginPage.css';\r\n\r\nconst LoginPage = () => {\r\n    const navigate = useNavigate();\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [error, setError] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const handleLogin = async () => {\r\n        if (email && password) {\r\n            setLoading(true);\r\n\r\n            try {\r\n                const response = await fetch('http://localhost:5000/api/login', {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                    body: JSON.stringify({ email, password }),\r\n                });\r\n\r\n                if (!response.ok) {\r\n                    const errorData = await response.json();\r\n                    setError(errorData.message || 'Invalid login or password');\r\n                    return;\r\n                }\r\n\r\n                const data = await response.json();\r\n\r\n                if (data.token) {\r\n                    // Сохраняем токен и email в localStorage для дальнейшего использования\r\n                    localStorage.setItem('authToken', data.token);\r\n                    localStorage.setItem('email', email);\r\n                }\r\n\r\n                // Логика перенаправления в зависимости от роли\r\n                if (data.role === false) {\r\n                    // Обычный пользователь\r\n                    navigate('/event');\r\n                } else if (data.role === true) {\r\n                    // Администратор\r\n                    navigate('/admin');\r\n                } else {\r\n                    setError('Role not defined');\r\n                }\r\n            } catch (err) {\r\n                setError('Server error. Please try again later.');\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        } else {\r\n            setError('Please fill in all fields');\r\n        }\r\n    };\r\n\r\n    const handleRegister = () => {\r\n        navigate('/register');\r\n    };\r\n\r\n    return (\r\n        <div className=\"login-container\" style={{ backgroundImage: `url(${backgroundImage})` }}>\r\n            <div className=\"login-box\">\r\n                <h1>Login</h1>\r\n                {error && <div className=\"error-message\">{error}</div>}\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"email\">Email</label>\r\n                    <input\r\n                        type=\"email\"\r\n                        id=\"email\"\r\n                        placeholder=\"Enter your email\"\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"password\">Password</label>\r\n                    <input\r\n                        type=\"password\"\r\n                        id=\"password\"\r\n                        placeholder=\"Enter your password\"\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    />\r\n                </div>\r\n                <button className=\"login-btn\" onClick={handleLogin} disabled={loading}>\r\n                    {loading ? 'Logging in...' : 'Login'}\r\n                </button>\r\n                <div className=\"register-link\">\r\n                    <span>Don't have an account?</span>\r\n                    <a href=\"#\" onClick={handleRegister}>\r\n                        Register\r\n                    </a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LoginPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
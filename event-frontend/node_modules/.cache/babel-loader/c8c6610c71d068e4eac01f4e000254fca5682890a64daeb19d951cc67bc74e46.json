{"ast":null,"code":"const API_BASE_URL = 'http://localhost:5000/api';\nexport const fetchPlaces = async () => {\n  const response = await fetch(`${API_BASE_URL}/places`);\n  if (!response.ok) throw new Error('Failed to fetch places');\n  return response.json();\n};\nexport const fetchCategories = async () => {\n  const response = await fetch(`${API_BASE_URL}/categories`);\n  if (!response.ok) throw new Error('Failed to fetch categories');\n  return response.json();\n};\nexport const fetchEventData = async eventId => {\n  const response = await fetch(`${API_BASE_URL}/events/${eventId}/edit`);\n  if (!response.ok) throw new Error('Failed to fetch event data');\n  return response.json();\n};\nexport const updateEvent = async (eventId, eventData) => {\n  const response = await fetch(`${API_BASE_URL}/events/${eventId}/update`, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      ...eventData,\n      date: new Date(eventData.date).toISOString()\n    })\n  });\n  if (!response.ok) throw new Error('Failed to update event');\n};\nexport const deleteEvent = async eventId => {\n  const response = await fetch(`${API_BASE_URL}/events/${eventId}/delete`, {\n    method: 'DELETE'\n  });\n  if (!response.ok) throw new Error('Failed to delete event');\n};\nexport const addEvent = async eventData => {\n  const response = await fetch(`${API_BASE_URL}/add_events`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(eventData)\n  });\n  if (!response.ok) throw new Error('Failed to add event');\n  return response.json();\n};","map":{"version":3,"names":["API_BASE_URL","fetchPlaces","response","fetch","ok","Error","json","fetchCategories","fetchEventData","eventId","updateEvent","eventData","method","headers","body","JSON","stringify","date","Date","toISOString","deleteEvent","addEvent"],"sources":["D:/Work/event-frontend/src/services/apiService.js"],"sourcesContent":["const API_BASE_URL = 'http://localhost:5000/api';\r\n\r\nexport const fetchPlaces = async () => {\r\n    const response = await fetch(`${API_BASE_URL}/places`);\r\n    if (!response.ok) throw new Error('Failed to fetch places');\r\n    return response.json();\r\n};\r\n\r\nexport const fetchCategories = async () => {\r\n    const response = await fetch(`${API_BASE_URL}/categories`);\r\n    if (!response.ok) throw new Error('Failed to fetch categories');\r\n    return response.json();\r\n};\r\n\r\nexport const fetchEventData = async (eventId) => {\r\n    const response = await fetch(`${API_BASE_URL}/events/${eventId}/edit`);\r\n    if (!response.ok) throw new Error('Failed to fetch event data');\r\n    return response.json();\r\n};\r\n\r\nexport const updateEvent = async (eventId, eventData) => {\r\n    const response = await fetch(`${API_BASE_URL}/events/${eventId}/update`, {\r\n        method: 'PUT',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n            ...eventData,\r\n            date: new Date(eventData.date).toISOString(), \r\n        }),\r\n    });\r\n    if (!response.ok) throw new Error('Failed to update event');\r\n};\r\n\r\nexport const deleteEvent = async (eventId) => {\r\n    const response = await fetch(`${API_BASE_URL}/events/${eventId}/delete`, {\r\n        method: 'DELETE',\r\n    });\r\n    if (!response.ok) throw new Error('Failed to delete event');\r\n};\r\n\r\nexport const addEvent = async (eventData) => {\r\n    const response = await fetch(`${API_BASE_URL}/add_events`, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(eventData),\r\n    });\r\n    if (!response.ok) throw new Error('Failed to add event');\r\n    return response.json();\r\n};\r\n"],"mappings":"AAAA,MAAMA,YAAY,GAAG,2BAA2B;AAEhD,OAAO,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;EACnC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGH,YAAY,SAAS,CAAC;EACtD,IAAI,CAACE,QAAQ,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,wBAAwB,CAAC;EAC3D,OAAOH,QAAQ,CAACI,IAAI,CAAC,CAAC;AAC1B,CAAC;AAED,OAAO,MAAMC,eAAe,GAAG,MAAAA,CAAA,KAAY;EACvC,MAAML,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGH,YAAY,aAAa,CAAC;EAC1D,IAAI,CAACE,QAAQ,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,4BAA4B,CAAC;EAC/D,OAAOH,QAAQ,CAACI,IAAI,CAAC,CAAC;AAC1B,CAAC;AAED,OAAO,MAAME,cAAc,GAAG,MAAOC,OAAO,IAAK;EAC7C,MAAMP,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGH,YAAY,WAAWS,OAAO,OAAO,CAAC;EACtE,IAAI,CAACP,QAAQ,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,4BAA4B,CAAC;EAC/D,OAAOH,QAAQ,CAACI,IAAI,CAAC,CAAC;AAC1B,CAAC;AAED,OAAO,MAAMI,WAAW,GAAG,MAAAA,CAAOD,OAAO,EAAEE,SAAS,KAAK;EACrD,MAAMT,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGH,YAAY,WAAWS,OAAO,SAAS,EAAE;IACrEG,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACL,cAAc,EAAE;IACpB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MACjB,GAAGL,SAAS;MACZM,IAAI,EAAE,IAAIC,IAAI,CAACP,SAAS,CAACM,IAAI,CAAC,CAACE,WAAW,CAAC;IAC/C,CAAC;EACL,CAAC,CAAC;EACF,IAAI,CAACjB,QAAQ,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,wBAAwB,CAAC;AAC/D,CAAC;AAED,OAAO,MAAMe,WAAW,GAAG,MAAOX,OAAO,IAAK;EAC1C,MAAMP,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGH,YAAY,WAAWS,OAAO,SAAS,EAAE;IACrEG,MAAM,EAAE;EACZ,CAAC,CAAC;EACF,IAAI,CAACV,QAAQ,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,wBAAwB,CAAC;AAC/D,CAAC;AAED,OAAO,MAAMgB,QAAQ,GAAG,MAAOV,SAAS,IAAK;EACzC,MAAMT,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGH,YAAY,aAAa,EAAE;IACvDY,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACL,cAAc,EAAE;IACpB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,SAAS;EAClC,CAAC,CAAC;EACF,IAAI,CAACT,QAAQ,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,qBAAqB,CAAC;EACxD,OAAOH,QAAQ,CAACI,IAAI,CAAC,CAAC;AAC1B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
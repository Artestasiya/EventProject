{"ast":null,"code":"var _jsxFileName = \"D:\\\\Work\\\\event-frontend\\\\src\\\\pages\\\\EventDetailPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport './EventDetailPage.css';\nimport backgroundImage from '../images/background.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EventDetailPage = () => {\n  _s();\n  const {\n    eventId\n  } = useParams(); // eventId is extracted from the URL parameters\n  const [eventData, setEventData] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [serverError, setServerError] = useState('');\n  const [userId, setUserId] = useState(null); // Assume the user ID is handled elsewhere, e.g., from localStorage or context\n\n  useEffect(() => {\n    // Fetch event data when the component mounts or the eventId changes\n    const fetchEvent = async () => {\n      setIsLoading(true);\n      try {\n        const response = await fetch(`http://localhost:5000/api/events/${eventId}`);\n        const data = await response.json();\n        if (response.ok) {\n          setEventData({\n            ...data,\n            participants: data.participants || []\n          });\n        } else {\n          setServerError(data.message || 'Error fetching event details');\n        }\n      } catch (error) {\n        console.error('Error fetching event:', error);\n        setServerError('Server error. Please try again later.');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    if (eventId) {\n      // Ensure the eventId exists before making the request\n      fetchEvent();\n    } else {\n      setServerError('Event not found.');\n      setIsLoading(false);\n    }\n  }, [eventId]);\n  const handleRegisterClick = async () => {\n    if (!userId) {\n      alert('Please log in first!');\n      return;\n    }\n    if (eventData !== null && eventData !== void 0 && eventData.max_amount && eventData.participants.length >= eventData.max_amount) {\n      alert('Sorry, the event is full!');\n      return;\n    }\n    try {\n      const response = await fetch(`http://localhost:5000/api/events/${eventId}/register`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          userId\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        alert(data.message);\n        setEventData(prevEventData => ({\n          ...prevEventData,\n          participants: [...(prevEventData.participants || []), {\n            id: userId,\n            name: 'Your Name'\n          } // Replace with actual name\n          ]\n        }));\n      } else {\n        alert(data.message || 'Registration failed');\n      }\n    } catch (error) {\n      console.error('Error registering for event:', error);\n      alert('Server error during registration');\n    }\n  };\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading event details...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 16\n    }, this);\n  }\n  if (!eventData) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: serverError || 'Event not found'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"background\",\n    style: {\n      backgroundImage: `url(${backgroundImage})`\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"event-detail-container\",\n      children: [serverError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: serverError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 33\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"event-detail\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"back-button\",\n          onClick: () => window.history.back(),\n          children: \"Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: eventData.image || 'default-image.jpg',\n          alt: eventData.name,\n          className: \"event-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"event-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: eventData.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: eventData.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Date: \", new Date(eventData.date).toLocaleString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Place: \", eventData.place_name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Category: \", eventData.category_name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Maximum Participants: \", eventData.max_amount != null ? eventData.max_amount : 'No limit']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Participants (\", eventData.participants.length, eventData.max_amount != null ? `/${eventData.max_amount}` : '', \"):\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: eventData.participants.length > 0 ? eventData.participants.map((participant, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [participant.name, \" \", participant.surname]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 37\n            }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"No participants yet.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleRegisterClick,\n            disabled: eventData.max_amount && eventData.participants.length >= eventData.max_amount,\n            children: eventData.max_amount && eventData.participants.length >= eventData.max_amount ? 'Event Full' : 'Register for Event'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 9\n  }, this);\n};\n_s(EventDetailPage, \"5INkI02Efxnyp2RnXAEQ5NBVnGM=\", false, function () {\n  return [useParams];\n});\n_c = EventDetailPage;\nexport default EventDetailPage;\nvar _c;\n$RefreshReg$(_c, \"EventDetailPage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","backgroundImage","jsxDEV","_jsxDEV","EventDetailPage","_s","eventId","eventData","setEventData","isLoading","setIsLoading","serverError","setServerError","userId","setUserId","fetchEvent","response","fetch","data","json","ok","participants","message","error","console","handleRegisterClick","alert","max_amount","length","method","headers","body","JSON","stringify","prevEventData","id","name","children","fileName","_jsxFileName","lineNumber","columnNumber","className","style","onClick","window","history","back","src","image","alt","description","Date","date","toLocaleString","place_name","category_name","map","participant","index","surname","disabled","_c","$RefreshReg$"],"sources":["D:/Work/event-frontend/src/pages/EventDetailPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport './EventDetailPage.css';\r\nimport backgroundImage from '../images/background.jpg';\r\n\r\nconst EventDetailPage = () => {\r\n    const { eventId } = useParams();  // eventId is extracted from the URL parameters\r\n    const [eventData, setEventData] = useState(null);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [serverError, setServerError] = useState('');\r\n    const [userId, setUserId] = useState(null);  // Assume the user ID is handled elsewhere, e.g., from localStorage or context\r\n\r\n    useEffect(() => {\r\n        // Fetch event data when the component mounts or the eventId changes\r\n        const fetchEvent = async () => {\r\n            setIsLoading(true);\r\n            try {\r\n                const response = await fetch(`http://localhost:5000/api/events/${eventId}`);\r\n                const data = await response.json();\r\n                if (response.ok) {\r\n                    setEventData({\r\n                        ...data,\r\n                        participants: data.participants || [],\r\n                    });\r\n                } else {\r\n                    setServerError(data.message || 'Error fetching event details');\r\n                }\r\n            } catch (error) {\r\n                console.error('Error fetching event:', error);\r\n                setServerError('Server error. Please try again later.');\r\n            } finally {\r\n                setIsLoading(false);\r\n            }\r\n        };\r\n\r\n        if (eventId) {  // Ensure the eventId exists before making the request\r\n            fetchEvent();\r\n        } else {\r\n            setServerError('Event not found.');\r\n            setIsLoading(false);\r\n        }\r\n    }, [eventId]);\r\n\r\n    const handleRegisterClick = async () => {\r\n        if (!userId) {\r\n            alert('Please log in first!');\r\n            return;\r\n        }\r\n\r\n        if (eventData?.max_amount && eventData.participants.length >= eventData.max_amount) {\r\n            alert('Sorry, the event is full!');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const response = await fetch(`http://localhost:5000/api/events/${eventId}/register`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({ userId }),\r\n            });\r\n\r\n            const data = await response.json();\r\n            if (response.ok) {\r\n                alert(data.message);\r\n                setEventData((prevEventData) => ({\r\n                    ...prevEventData,\r\n                    participants: [\r\n                        ...(prevEventData.participants || []),\r\n                        { id: userId, name: 'Your Name' },  // Replace with actual name\r\n                    ],\r\n                }));\r\n            } else {\r\n                alert(data.message || 'Registration failed');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error registering for event:', error);\r\n            alert('Server error during registration');\r\n        }\r\n    };\r\n\r\n    if (isLoading) {\r\n        return <p>Loading event details...</p>;\r\n    }\r\n\r\n    if (!eventData) {\r\n        return <p>{serverError || 'Event not found'}</p>;\r\n    }\r\n\r\n    return (\r\n        <div className=\"background\" style={{ backgroundImage: `url(${backgroundImage})` }}>\r\n            <div className=\"event-detail-container\">\r\n                {serverError && <p className=\"error\">{serverError}</p>}\r\n\r\n                <div className=\"event-detail\">\r\n                    <button className=\"back-button\" onClick={() => window.history.back()}>Back</button>\r\n\r\n                    <img src={eventData.image || 'default-image.jpg'} alt={eventData.name} className=\"event-image\" />\r\n                    <div className=\"event-info\">\r\n                        <h1>{eventData.name}</h1>\r\n                        <p>{eventData.description}</p>\r\n                        <p>Date: {new Date(eventData.date).toLocaleString()}</p>\r\n                        <p>Place: {eventData.place_name}</p>\r\n                        <p>Category: {eventData.category_name}</p>\r\n\r\n                        <p>Maximum Participants: {eventData.max_amount != null ? eventData.max_amount : 'No limit'}</p>\r\n\r\n                        <h3>Participants ({eventData.participants.length}{eventData.max_amount != null ? `/${eventData.max_amount}` : ''}):</h3>\r\n                        <ul>\r\n                            {eventData.participants.length > 0 ? (\r\n                                eventData.participants.map((participant, index) => (\r\n                                    <li key={index}>\r\n                                        {participant.name} {participant.surname}\r\n                                    </li>\r\n                                ))\r\n                            ) : (\r\n                                <p>No participants yet.</p>\r\n                            )}\r\n                        </ul>\r\n\r\n                        <button\r\n                            onClick={handleRegisterClick}\r\n                            disabled={eventData.max_amount && eventData.participants.length >= eventData.max_amount}\r\n                        >\r\n                            {eventData.max_amount && eventData.participants.length >= eventData.max_amount\r\n                                ? 'Event Full'\r\n                                : 'Register for Event'}\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EventDetailPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
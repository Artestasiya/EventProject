{"ast":null,"code":"var _jsxFileName = \"D:\\\\Work\\\\event-frontend\\\\src\\\\pages\\\\AdminPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './EventsPage.css';\nimport backgroundImage from '../images/background.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminPage = () => {\n  _s();\n  const navigate = useNavigate();\n  const [eventData, setEventData] = useState([]);\n  const [filteredEvents, setFilteredEvents] = useState([]); // Для хранения отфильтрованных событий\n  const [isLoading, setIsLoading] = useState(true);\n  const [serverError, setServerError] = useState('');\n  const [searchText, setSearchText] = useState(''); // Состояние для текста поиска\n\n  useEffect(() => {\n    const fetchEvents = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/api/events');\n        const data = await response.json();\n        if (response.ok) {\n          setEventData(data);\n          setFilteredEvents(data); // Изначально отображаем все события\n        } else {\n          setServerError(data.message || 'Error fetching events');\n        }\n      } catch (error) {\n        console.error('Error fetching events:', error);\n        setServerError('Server error. Please try again later.');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchEvents();\n  }, []);\n\n  // Обработчик изменения текста в поле поиска\n  const handleSearchChange = e => {\n    const value = e.target.value;\n    setSearchText(value);\n\n    // Фильтрация событий по названию или id_event\n    const filtered = eventData.filter(event => event.name.toLowerCase().includes(value.toLowerCase()) || event.id_event.toString().includes(value));\n    setFilteredEvents(filtered); // Обновляем фильтрованные события\n  };\n  const handleEventClick = eventId => {\n    navigate(`/edit-event/${eventId}`); // Переход к редактированию события\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"background\",\n    style: {\n      backgroundImage: `url(${backgroundImage})`\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"top-bar\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search by name or ID...\",\n          className: \"search-bar\",\n          value: searchText,\n          onChange: handleSearchChange // Обработчик ввода текста\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"add_event\",\n          onClick: () => navigate('/add-event'),\n          children: \"Add Event\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"user-icon\",\n          onClick: () => navigate('/profile'),\n          children: \"\\uD83D\\uDC64\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), serverError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: serverError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 33\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"event-cards\",\n        children: isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading events...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 25\n        }, this) : filteredEvents.length > 0 ? filteredEvents.map(event => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          onClick: () => handleEventClick(event.id_event) // Обработчик клика\n          ,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: event.image,\n            alt: event.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: event.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: event.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 33\n          }, this)]\n        }, event.id_event, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 29\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"There are no events now\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n_s(AdminPage, \"Mkof/RGe6CkpHdO5UiDIfMfkI5I=\", false, function () {\n  return [useNavigate];\n});\n_c = AdminPage;\nexport default AdminPage;\nvar _c;\n$RefreshReg$(_c, \"AdminPage\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","backgroundImage","jsxDEV","_jsxDEV","AdminPage","_s","navigate","eventData","setEventData","filteredEvents","setFilteredEvents","isLoading","setIsLoading","serverError","setServerError","searchText","setSearchText","fetchEvents","response","fetch","data","json","ok","message","error","console","handleSearchChange","e","value","target","filtered","filter","event","name","toLowerCase","includes","id_event","toString","handleEventClick","eventId","className","style","children","type","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","length","map","src","image","alt","description","_c","$RefreshReg$"],"sources":["D:/Work/event-frontend/src/pages/AdminPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './EventsPage.css';\r\nimport backgroundImage from '../images/background.jpg';\r\n\r\nconst AdminPage = () => {\r\n    const navigate = useNavigate();\r\n    const [eventData, setEventData] = useState([]);\r\n    const [filteredEvents, setFilteredEvents] = useState([]); // Для хранения отфильтрованных событий\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [serverError, setServerError] = useState('');\r\n    const [searchText, setSearchText] = useState(''); // Состояние для текста поиска\r\n\r\n    useEffect(() => {\r\n        const fetchEvents = async () => {\r\n            try {\r\n                const response = await fetch('http://localhost:5000/api/events');\r\n                const data = await response.json();\r\n                if (response.ok) {\r\n                    setEventData(data);\r\n                    setFilteredEvents(data); // Изначально отображаем все события\r\n                } else {\r\n                    setServerError(data.message || 'Error fetching events');\r\n                }\r\n            } catch (error) {\r\n                console.error('Error fetching events:', error);\r\n                setServerError('Server error. Please try again later.');\r\n            } finally {\r\n                setIsLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchEvents();\r\n    }, []);\r\n\r\n    // Обработчик изменения текста в поле поиска\r\n    const handleSearchChange = (e) => {\r\n        const value = e.target.value;\r\n        setSearchText(value);\r\n\r\n        // Фильтрация событий по названию или id_event\r\n        const filtered = eventData.filter(event =>\r\n            event.name.toLowerCase().includes(value.toLowerCase()) ||\r\n            event.id_event.toString().includes(value)\r\n        );\r\n        setFilteredEvents(filtered); // Обновляем фильтрованные события\r\n    };\r\n\r\n    const handleEventClick = (eventId) => {\r\n        navigate(`/edit-event/${eventId}`); // Переход к редактированию события\r\n    };\r\n\r\n    return (\r\n        <div className=\"background\" style={{ backgroundImage: `url(${backgroundImage})` }}>\r\n            <div className=\"container\">\r\n                <div className=\"top-bar\">\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Search by name or ID...\"\r\n                        className=\"search-bar\"\r\n                        value={searchText}\r\n                        onChange={handleSearchChange} // Обработчик ввода текста\r\n                    />\r\n                    <button className=\"add_event\" onClick={() => navigate('/add-event')}>\r\n                        Add Event\r\n                    </button>\r\n                    <button className=\"user-icon\" onClick={() => navigate('/profile')}>\r\n                        👤\r\n                    </button>\r\n                </div>\r\n\r\n                {serverError && <p className=\"error\">{serverError}</p>}\r\n\r\n                <div className=\"event-cards\">\r\n                    {isLoading ? (\r\n                        <p>Loading events...</p>\r\n                    ) : filteredEvents.length > 0 ? (\r\n                        filteredEvents.map((event) => (\r\n                            <div\r\n                                className=\"card\"\r\n                                key={event.id_event}\r\n                                onClick={() => handleEventClick(event.id_event)} // Обработчик клика\r\n                            >\r\n                                <img src={event.image} alt={event.name} />\r\n                                <div className=\"card-info\">\r\n                                    <h3>{event.name}</h3>\r\n                                    <p>{event.description}</p>\r\n                                </div>\r\n                            </div>\r\n                        ))\r\n                    ) : (\r\n                        <p>There are no events now</p>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AdminPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}